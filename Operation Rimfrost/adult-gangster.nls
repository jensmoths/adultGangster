

to setup-adult-gangsters
  
  let Q nbr-of-adult-gangsters
  create-adult-gangsters Q[
    ;;Starting possition
    setxy random-xcor random-ycor
    set beliefs[]
    set intentions[]
    set size 5
    set shape "mario gangster"
    ;;Setting a gang
    ifelse random 100 < 49 
    [add-belief create-belief "gang" 15]
    [add-belief create-belief "gang" 45] 
    set color belief-content  read-first-belief-of-type "gang"
    add-belief create-belief "gangMembers" []
    add-belief create-belief "othergangHideouts" []
    add-belief create-belief "othergangMembers" []
    
    let R random 100
    ifelse R < 33 [
      
      add-belief create-belief "territory" "lowerclass"
      add-belief create-belief "home" one-of houses with [adult-gangsters-living-here = 0 and class = "lowerclass"]
      ;;add-belief create-belief "status" 50
      ;;add-belief create-belief "money"
    ]
    [
      ifelse R < 67[
        
        
        add-belief create-belief "territory" "middleclass"
        add-belief create-belief "home" one-of houses with [adult-gangsters-living-here = 0 and class = "middleclass"]
        ;;add-belief create-belief "status";;ADD STATUS FRÅGA FREDRIK OM GRÄNSERNA
        ;;add-belief create-belief "money";;ADD StartPengar FRÅGA FREDRIK OM GRÄNSERNA
      ][
        
        add-belief create-belief "territory" "lowerclass"
        add-belief create-belief "home" one-of houses with [adult-gangsters-living-here = 0 and class = "upperclass"]
        ;;add-belief create-belief "status";;ADD STATUS FRÅGA FREDRIK OM GRÄNSERNA
        ;;add-belief create-belief "money";;ADD StartPengar FRÅGA FREDRIK OM GRÄNSERNA
      ] 
   ]
   move-to belief-content read-first-belief-of-type "home"
   ask belief-content read-first-belief-of-type "home" [
     set adult-gangsters-living-here 1
    ] 
    ;;let temp gang-hideouts with [color = belief-content read-first-belief-of-type "gang"]
    ;;foreach temp [
      ;;x -> add-belief create-belief "gangHideout" x 
    ;;]
    
    
    ;;add-belief create-belief "gangHideouts" [self] of gang-hideouts with [color = belief-content read-first-belief-of-type "gang"] 
    ;;ADD MEMBER TO LIST
  ]
 
  ;;update-ganghideoutlist
  ;;update-gangmemberlist
end

to update-gangmemberlist
  ask adult-gangsters[
    update-belief create-belief "gangMembers" adult-gangsters with [color = belief-content read-first-belief-of-type "gang"];; updatera allas gangMembers
  ]
end

to update-ganghideoutlist
  
end

to add-othergangmember-to-list
  ;;Test
end

to add-otherganghideout-to-list
  ;;Test
end