globals [stash]

adult-gangsters-own [
  
]

to setup-adult-gangsters
  create-children 6[
  set beliefs ([])
    set intentions ([])
    set incoming-queue ([])
    set shape  "person"
    set color green
    set size 1  ; easier to see
    set label-color green - 2
    setxy random-xcor random-ycor
  ]
create-adult-gangsters 1[
    set beliefs ([])
    set intentions ([])
    set incoming-queue ([])
    set shape  "person"
    set color red
    set size 2  ; easier to see
    set label-color red - 2

    setxy random-xcor random-ycor
    ;setxy 1 1]
  ]
create-adult 1[
    set beliefs ([])
    set intentions ([])
    set incoming-queue ([])
    set shape  "person"
    set color yellow
    set size 2  ; easier to see
    set label-color yellow - 2

    setxy random-xcor random-ycor
    ;setxy 1 1

  ]
end


to processMsg  
  if not empty? incoming-queue [
    let msg get-message
    let performative get-performative msg
    let content get-content msg
    let sender get-sender msg
    (ifelse 
      performative = "agree"[
        (ifelse
          content = "availableForDelivery"[
            ifelse exist-beliefs-of-type "waitingForAvailibilty" 
            [
              add-belief create-belief "availableForDelivery" sender
              let x get-belief "waitingForAvailibilty"
            ]
          [
              let reply create-reply "decline" msg
              set reply add-content "tooLate" reply
              send reply
          ]
          ]
          content = "212"[]
    )]
    performative = "request"[
       (ifelse
          content = "orderDrugs"[
          add-belief create-belief "wantsDrugs" sender]
          content = "212"[]
    )]
      performative = "inform"[
       (ifelse
          content = "delivered"[
          add-belief create-belief "deliveredDrugs" sender]
          content = "212"[]
    )]
  )]  
end

to deliberateIntentions
    if exist-beliefs-of-type "wantsDrugs"
    [
     let belief get-belief "wantsDrugs"
     let customer belief-content belief
     add-belief create-belief "deliveringDrugs" customer
     add-intention "requestDelivery" "true"
    ]
    if exist-beliefs-of-type "deliveredDrugs"
    [
    add-intention "sendLocation" "true"
    ]
    
end

to requestDelivery
  let msg create-message "request"
  set msg add-multiple-receivers [0 1 2 3 4 5] msg
  set msg add-content "availableToDeliver" msg
  send msg
  add-intention "orderDelivery" "deliveryOrdered" 
  add-belief create-belief "waitingForAvailibilty" ""
end

to orderDelivery
 if exist-beliefs-of-type "availableForDelivery" 
  [
    let msg create-message "inform"
    let reciever belief-content read-first-belief-of-type "availableForDelivery"
    set msg add-receiver reciever  msg
    let string "stash"
    set string word string word word "x" "4" word "y" "4"
    set string word string word "drop" word word "z" "4" word "q" "4"
    set msg add-content string msg
    show msg
    send msg
    remove-belief read-first-belief-of-type "availableForDelivery"
  ]
end

to-report deliveryOrdered
  if exist-beliefs-of-type "availableForDelivery" 
    [
      report false
    ]
  report true
end

to sendLocation
  let msg create-message "inform"
    let reciever belief-content get-belief "deliveringDrugs"
    set msg add-receiver reciever msg
    let string "locationDrugs"
    set string word string word "4" "4"
    set msg add-content string msg
    send msg
    remove-belief read-first-belief-of-type "deliveredDrugs"
end

